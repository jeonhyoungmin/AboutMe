import*as THREE from"three";import{GLTFLoader}from"three/examples/jsm/loaders/GLTFLoader.js";import{Octree}from"three/examples/jsm/math/Octree.js";import{Capsule}from"three/examples/jsm/math/Capsule.js";import"../public/gltf/test.glb";const pointer=new THREE.Vector2,raycaster=new THREE.Raycaster,loader=new GLTFLoader,playerVelocity=new THREE.Vector3,playerDirection=new THREE.Vector3;let playerOnFloor=!1;const keyStates={},scene=new THREE.Scene,clock=new THREE.Clock,container=document.getElementById("root"),GRAVITY=30,STEPS_PER_FRAME=30,worldOctree=new Octree,renderer=new THREE.WebGLRenderer({antialias:!0});renderer.setPixelRatio(window.devicePixelRatio),renderer.setSize(window.innerWidth,window.innerHeight),renderer.shadowMap.enabled=!0,renderer.shadowMap.type=THREE.VSMShadowMap,renderer.outputEncoding=THREE.sRGBEncoding,renderer.toneMapping=THREE.ACESFilmicToneMapping,container.appendChild(renderer.domElement);const camera=new THREE.PerspectiveCamera(70,window.innerWidth/window.innerHeight,.1,1e3);camera.rotation.order="YXZ";const playerCapsule=new Capsule(new THREE.Vector3(0,.35,0),new THREE.Vector3(0,1,0),.35),fihemisphereLight=new THREE.HemisphereLight(16512703,16512703,.5);fihemisphereLight.position.set(2,1,1),scene.add(fihemisphereLight);const directionalLight=new THREE.DirectionalLight(16777215,.5);directionalLight.position.set(0,10,-8),directionalLight.castShadow=!0,directionalLight.shadow.camera.near=.01,directionalLight.shadow.camera.far=100,directionalLight.shadow.camera.right=10,directionalLight.shadow.camera.left=-10,directionalLight.shadow.camera.top=10,directionalLight.shadow.camera.bottom=-10,directionalLight.shadow.mapSize.width=1024,directionalLight.shadow.mapSize.height=1024,directionalLight.shadow.radius=5,directionalLight.shadow.bias=-6e-5,scene.add(directionalLight);const axisHelper=new THREE.AxesHelper(200),directionalLightHelper=new THREE.DirectionalLightHelper(directionalLight,5),shadowHelper=new THREE.CameraHelper(directionalLight.shadow.camera);function playerCollisions(){const e=worldOctree.capsuleIntersect(playerCapsule);playerOnFloor=!1,e&&(playerOnFloor=e.normal.y>0,playerOnFloor||playerVelocity.addScaledVector(e.normal,-e.normal.dot(playerVelocity)),playerCapsule.translate(e.normal.multiplyScalar(e.depth)))}function updatePlayer(e){let r=Math.exp(-6*e)-1;playerOnFloor||(playerVelocity.y-=30*e,r*=.1),playerVelocity.addScaledVector(playerVelocity,r);const t=playerVelocity.clone().multiplyScalar(e);playerCapsule.translate(t),playerCollisions(),camera.position.copy(playerCapsule.end)}function getForwardVector(){return camera.getWorldDirection(playerDirection),playerDirection.y=0,playerDirection.normalize(),playerDirection}function getSideVector(){return camera.getWorldDirection(playerDirection),playerDirection.y=0,playerDirection.normalize(),playerDirection.cross(camera.up),playerDirection}function controls(e){let r=0;r=keyStates.ShiftLeft?e*(playerOnFloor?15:6):e*(playerOnFloor?8:6),keyStates.KeyW&&playerVelocity.add(getForwardVector().multiplyScalar(r)),keyStates.KeyS&&playerVelocity.add(getForwardVector().multiplyScalar(-r)),keyStates.KeyA&&playerVelocity.add(getSideVector().multiplyScalar(-r)),keyStates.KeyD&&playerVelocity.add(getSideVector().multiplyScalar(r)),playerOnFloor&&keyStates.Space&&(playerVelocity.y=8)}function teleportPlayerIfOob(){camera.position.y<=-25&&(playerCapsule.start.set(0,.35,0),playerCapsule.end.set(0,1,0),playerCapsule.radius=.35,camera.position.copy(playerCapsule.end),camera.rotation.set(0,0,0))}function animate(){const e=Math.min(.05,clock.getDelta())/30;for(let r=0;r<30;r++)controls(e),updatePlayer(e),teleportPlayerIfOob();renderer.render(scene,camera),requestAnimationFrame(animate)}function resize(){camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight)}scene.add(axisHelper),scene.add(directionalLightHelper),scene.add(shadowHelper),document.addEventListener("keydown",(e=>{keyStates[e.code]=!0})),document.addEventListener("keyup",(e=>{keyStates[e.code]=!1})),container.addEventListener("mousedown",(()=>{document.body.requestPointerLock()})),document.body.addEventListener("mousemove",(e=>{document.pointerLockElement===document.body&&(camera.rotation.y-=e.movementX/800,camera.rotation.x-=e.movementY/800)})),loader.load("../public/gltf/test.glb",(e=>{scene.add(e.scene),worldOctree.fromGraphNode(e.scene),e.scene.traverse((e=>{e.isMesh&&(e.castShadow=!0,e.receiveShadow=!0,e.material.map&&(e.material.map.anisotropy=4))}))})),window.addEventListener("resize",resize),animate(),window.addEventListener("click",(e=>{console.log(raycaster),raycaster.setFromCamera(pointer,camera),console.log(raycaster);const r=raycaster.intersectObjects(scene.children);console.log(r);for(let e=0;e<r.length;e++)"상자"===r[e].object.name&&fetch("http://localhost:3000/box").then((e=>e.json())).then((e=>console.log(e))).catch((e=>console.log(e)))}));